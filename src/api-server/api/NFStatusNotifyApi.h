/**
 * Nsmf_EventExposure
 * Session Management Event Exposure Service. Â© 2019, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0.alpha-1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * NFStatusNotifyApi.h
 *
 *
 */

#ifndef NFStatusNotifyApi_H_
#define NFStatusNotifyApi_H_

#include <pistache/http.h>
#include <pistache/router.h>
#include <pistache/http_headers.h>
#include <pistache/optional.h>

#include "NotificationData.h"
#include "ProblemDetails.h"

namespace oai {
namespace smf_server {
namespace api {

using namespace oai::smf_server::model;

class NFStatusNotifyApi {
 public:
  NFStatusNotifyApi(std::shared_ptr<Pistache::Rest::Router>);
  virtual ~NFStatusNotifyApi() {}
  void init();

  const std::string base = "/nsmf_nfstatus_notify/";

 private:
  void setupRoutes();

  void notify_nf_status_handler(
      const Pistache::Rest::Request& request,
      Pistache::Http::ResponseWriter response);
  void notify_nf_status_default_handler(
      const Pistache::Rest::Request& request,
      Pistache::Http::ResponseWriter response);

  std::shared_ptr<Pistache::Rest::Router> router;

  /// <summary>
  ///
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="NotificationData"></param>
  virtual void receive_nf_status_notification(
      const NotificationData& notificationData,
      Pistache::Http::ResponseWriter& response) = 0;
};

}  // namespace api
}  // namespace smf_server
}  // namespace oai

#endif /* NFStatusNotifyApi_H_ */
